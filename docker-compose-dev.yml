name: compose
services:
  mock:
    restart: always
    build:
      context: ./
      dockerfile: ./mock/Dockerfile.dev
      args:
        - PACKAGE=${MOCK_SERVICE_HOST}
        - PORT=${MOCK_SERVICE_PORT}
    container_name: ${MOCK_SERVICE_HOST}
    links:
      - db
    env_file:
      - .env
    ports:
      - "${MOCK_SERVICE_PORT}:${MOCK_SERVICE_PORT}"
    volumes:
      - ./${MOCK_SERVICE_HOST}:/home/app/${MOCK_SERVICE_HOST}
      - ./common:/home/app/common
      - /home/app/${MOCK_SERVICE_HOST}/node_modules
  user:
    restart: always
    build:
      context: ./
      dockerfile: ./user/Dockerfile.dev
      args:
        - PACKAGE=${USER_SERVICE_HOST}
        - PORT=${USER_SERVICE_PORT}
    container_name: ${USER_SERVICE_HOST}
    links:
      - db
    env_file:
      - .env
    ports:
      - "${USER_SERVICE_PORT}:${USER_SERVICE_PORT}"
    volumes:
      - ./${USER_SERVICE_HOST}:/home/app/${USER_SERVICE_HOST}
      - ./common:/home/app/common
      - /home/app/${USER_SERVICE_HOST}/node_modules
  gateway:
    image: nginx:latest
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./gateway/nginx/templates:/etc/nginx/templates
    env_file:
      - .env
    extra_hosts:
      - "host.docker.internal:host-gateway"
  db:
    image: 'mongo:3.7'
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DATABASE}
      MONGO_USER: ${MONGO_USER}
      MONGO_PASSWORD: ${MONGO_PASSWORD}
    container_name: ${MONGO_HOST}
    ports:
      - 27018:${MONGO_PORT}
  openapi_generator:
    profiles: [ "generate" ]
    build:
      context: ./tools/openapi-client-generator
      dockerfile: Dockerfile.dev
    container_name: openapi_generator
    depends_on:
      - ${MOCK_SERVICE_HOST}
      - ${USER_SERVICE_HOST}
    env_file:
      - .env
    volumes:
      - ./tools/openapi-client-generator/.build:/local/out
